{
  "domains": {
    "network_security": [
      "Use firewalls to segment traffic.",
      "Implement network segmentation using firewalls.",
      "Use encrypted VPN for remote access.",
      "Monitor network traffic for suspicious activities.",
      "Regularly update and patch network devices.",
      "Deploy intrusion detection systems (IDS).",
      "Disable unused ports and protocols.",
      "Implement Network Access Control (NAC) to restrict unauthorized devices."
    ],
    "application_security": [
      "Perform threat modeling during application design.",
      "Use secure design principles such as least privilege and fail-safe defaults.",
      "Document security architecture and verify its implementation.",
      "Regularly review and update the threat model for changes in the system.",
      "Implement multi-factor authentication for all users.",
      "Use secure password storage mechanisms (e.g., bcrypt, PBKDF2).",
      "Avoid hardcoding credentials in the application code.",
      "Ensure password reset functionality is secure and requires identity verification.",
      "Use secure, unique session identifiers.",
      "Implement session timeouts for inactivity.",
      "Use the `HttpOnly` and `Secure` flags for cookies.",
      "Invalidate sessions upon user logout or password change.",
      "Enforce the principle of least privilege for user roles.",
      "Use role-based access control (RBAC) or attribute-based access control (ABAC).",
      "Deny access by default and explicitly allow where required.",
      "Regularly audit access control policies.",
      "Validate all user inputs for length, type, and format.",
      "Sanitize inputs to remove malicious data.",
      "Use output encoding (e.g., HTML encoding) to prevent injection attacks.",
      "Reject or sanitize unexpected input.",
      "Use strong encryption algorithms (e.g., AES-256) for sensitive data.",
      "Securely store encryption keys using hardware security modules (HSMs) or key management services.",
      "Implement encryption for data at rest and in transit.",
      "Rotate encryption keys periodically and upon compromise.",
      "Log all security-related events.",
      "Avoid exposing sensitive information in error messages.",
      "Secure access to logs and implement log rotation.",
      "Monitor logs for suspicious activity using centralized tools.",
      "Encrypt sensitive data before storage.",
      "Use access controls to restrict access to sensitive data.",
      "Mask sensitive data in non-production environments.",
      "Implement data classification to apply appropriate security controls.",
      "Use TLS to secure all communications between client and server.",
      "Validate certificates to prevent man-in-the-middle (MITM) attacks.",
      "Avoid transmitting sensitive data in plain text.",
      "Secure WebSocket communications with SSL/TLS.",
      "Implement content security policies (CSPs) to prevent malicious script execution.",
      "Use runtime application self-protection (RASP) tools.",
      "Scan dependencies and third-party libraries for vulnerabilities.",
      "Perform regular application security testing (e.g., SAST, DAST).",
      "Identify and address business logic vulnerabilities during design.",
      "Implement checks to prevent abuse of business workflows.",
      "Test for edge cases where logic can be exploited (e.g., price manipulation).",
      "Monitor for unusual patterns in user behavior.",
      "Validate file uploads for type and size.",
      "Store uploaded files in isolated directories.",
      "Restrict access to sensitive resource files.",
      "Scan uploaded files for malware before processing.",
      "Implement strong authentication and authorization for APIs.",
      "Use API gateways to centralize security controls.",
      "Validate and sanitize all API inputs.",
      "Enforce rate limiting and throttling to prevent abuse.",
      "Use secure defaults for all configurations.",
      "Restrict access to sensitive configuration files.",
      "Avoid using hardcoded secrets in the codebase.",
      "Regularly review and update application configurations."
    ],
    "data_security": [
      "Encrypt sensitive data at rest and in transit.",
      "Implement regular data backup procedures.",
      "Use strong encryption algorithms for data protection.",
      "Apply data masking for sensitive information.",
      "Implement secure key management practices.",
      "Classify data to determine its sensitivity and apply appropriate controls.",
      "Implement data loss prevention (DLP) tools to prevent unauthorized access."
    ],
    "identity_management": [
      "Enforce strong password policies.",
      "Implement multi-factor authentication.",
      "Use the principle of least privilege.",
      "Regular review of user access rights.",
      "Implement secure password recovery mechanisms.",
      "Use single sign-on (SSO) for better user experience and security.",
      "Monitor for anomalous login behavior using identity analytics."
    ],
    "cloud_security": [
      "Enable cloud service encryption.",
      "Implement secure access controls for cloud resources.",
      "Regular monitoring of cloud service configurations.",
      "Use cloud security posture management tools.",
      "Implement cloud backup and recovery procedures.",
      "Regularly review cloud storage configurations for misconfigurations.",
      "Ensure secure APIs for cloud integrations."
    ],
    "endpoint_security": [
      "Install and maintain antivirus software.",
      "Implement endpoint detection and response (EDR).",
      "Regular system updates and patch management.",
      "Control USB and removable media access.",
      "Implement host-based firewalls.",
      "Enable device encryption to protect sensitive data on devices.",
      "Use mobile device management (MDM) solutions for mobile devices."
    ],
    "security_awareness": [
      "Conduct regular security awareness training.",
      "Simulate phishing attacks for training.",
      "Maintain security documentation and policies.",
      "Regular security compliance training.",
      "Create incident response procedures.",
      "Encourage reporting of suspicious activities or potential threats."
    ],
    "mobile_security": [
      "Enforce mobile device encryption.",
      "Implement mobile device management (MDM).",
      "Secure app deployment policies.",
      "Regular mobile security assessments.",
      "Control mobile app permissions.",
      "Ensure all mobile devices have up-to-date security patches.",
      "Use secure communication protocols for mobile data transmission.",
      "Enable remote wipe for lost or stolen devices.",
      "Educate users on avoiding malicious apps and phishing links."
    ],
    "incident_response": [
      "Develop and regularly test an incident response plan.",
      "Establish a communication plan for handling security incidents.",
      "Conduct post-incident reviews to identify improvements.",
      "Create an incident classification system to prioritize responses.",
      "Ensure 24/7 monitoring and response capabilities."
    ],
    "risk_management": [
      "Perform regular risk assessments to identify vulnerabilities.",
      "Maintain an up-to-date risk register to track risks.",
      "Mitigate risks through proper controls and monitoring.",
      "Use quantitative risk analysis for decision-making.",
      "Engage third-party risk management for vendor assessments."
    ],
    "vulnerability_management": [
      "Perform regular vulnerability scans across all systems.",
      "Prioritize patching based on risk and criticality.",
      "Track and remediate vulnerabilities within defined SLAs.",
      "Monitor for zero-day vulnerabilities and deploy temporary controls.",
      "Use automated tools to streamline vulnerability management."
    ],
    "api_security": [
      "Implement strong authentication and authorization for all API endpoints.",
      "Use HTTPS to secure API communication.",
      "Validate and sanitize all inputs to prevent injection attacks.",
      "Limit API response data to avoid exposing sensitive information.",
      "Implement rate limiting and throttling to prevent abuse.",
      "Use API gateways to centralize security and manage API traffic.",
      "Employ logging and monitoring for API calls to detect anomalies.",
      "Rotate and secure API keys and credentials.",
      "Adopt OpenAPI/Swagger documentation to ensure clear and secure API design.",
      "Regularly test APIs for vulnerabilities using automated tools."
    ]
  }
}
